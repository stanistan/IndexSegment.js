{"version":3,"sources":["IndexSegment.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA,SAAS,eAAT,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B;AAC9B,SAAO,IAAI,qBAAQ,UAAU,CAAV,EAAa,MAAb,CAAoB;WAAK,EAAE,GAAF,CAAM,CAAN;GAAL,CAA5B,CAAJ,GAAkD,CAAlD,CADuB;CAA/B;;AAIA,SAAS,SAAT,CAAmB,CAAnB,EAAsB;AACpB,MAAI,OAAO,EAAP,CADgB;AAEpB,IAAE,OAAF,CAAU;WAAK,KAAK,IAAL,CAAU,CAAV;GAAL,CAAV,CAFoB;AAGpB,SAAO,IAAP,CAHoB;CAAtB;;AAMA,SAAS,MAAT,CAAgB,GAAhB,EAAqB;AACnB,SAAO,UAAU,qBAAQ,GAAR,CAAV,CAAP,CADmB;CAArB;;IAIM;;;8CAM6B,SAAS;AACxC,aAAO,UAAC,MAAD,EAAY;AACjB,eAAO,OACJ,WADI,GAEJ,KAFI,CAEE,OAFF,EAGJ,GAHI,CAGA;iBAAK,EAAE,IAAF;SAAL,CAHA,CAIJ,MAJI,CAIG;iBAAK,EAAE,MAAF,GAAW,CAAX;SAAL,CAJV,CADiB;OAAZ,CADiC;;;;wBAJb;AAC3B,aAAO,aAAa,yBAAb,CAAuC,cAAvC,CAAP,CAD2B;;;;AAc7B,WAhBI,YAgBJ,CAAY,SAAZ,EAAuB;0BAhBnB,cAgBmB;;AACrB,SAAK,IAAL,GAAY,sBAAZ,CADqB;AAErB,SAAK,IAAL,GAAY;AACV,iBAAW,aAAa,aAAa,eAAb;KAD1B,CAFqB;GAAvB;;eAhBI;;6BA2BK,MAAM;AACb,aAAO,OAAO,KAAK,IAAL,CAAU,SAAV,CAAoB,IAApB,CAAP,CAAP,CADa;;;;gCAIH,OAAO;AACjB,UAAI,CAAC,KAAK,IAAL,CAAU,GAAV,CAAc,KAAd,CAAD,EAAuB;AACzB,aAAK,IAAL,CAAU,GAAV,CAAc,KAAd,EAAqB,sBAArB,EADyB;OAA3B;AAGA,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,KAAd,CAAP,CAJiB;;;;8BAOT,QAAQ,IAAI;;;AACpB,aAAO,OAAP,CAAe,iBAAS;AACtB,cAAK,WAAL,CAAiB,KAAjB,EAAwB,GAAxB,CAA4B,EAA5B,EADsB;OAAT,CAAf,CADoB;AAIpB,aAAO,KAAK,MAAL,CAJa;;;;wBAOlB,MAAM,IAAI;AACZ,aAAO,KAAK,SAAL,CAAe,KAAK,QAAL,CAAc,IAAd,CAAf,EAAoC,EAApC,CAAP,CADY;;;;2BAIP,MAAM;;;AACX,aAAO,UAAU,KAAK,QAAL,CAAc,IAAd,EACd,GADc,CACV;eAAS,OAAK,WAAL,CAAiB,KAAjB;OAAT,CADU,CAEd,MAFc,CAEP,eAFO,EAEU,IAFV,CAAV,CAAP,CADW;;;;wBA1BA;AACX,aAAO,KAAK,IAAL,CAAU,IAAV,CADI;;;;SAvBT;;;AAuDL;;QAEQ;QAAc;QAAK","file":"IndexSegment.js","sourcesContent":["import Set from 'es6-set';\nimport Map from 'es6-map';\n\nfunction setIntersection(a, b) {\n\treturn a ? new Set(setValues(a).filter(x => b.has(x))) : b;\n}\n\nfunction setValues(s) {\n  var vals = [];\n  s.forEach(a => vals.push(a));\n  return vals;\n}\n\nfunction unique(els) {\n  return setValues(new Set(els));\n};\n\nclass IndexSegment {\n\n  static get stringTokenizer() {\n    return IndexSegment.stringTokenizerForPattern(/[^a-zA-Z0-9]/);\n  }\n\n  static stringTokenizerForPattern(pattern) {\n    return (string) => {\n      return string\n        .toLowerCase()\n        .split(pattern)\n        .map(s => s.trim())\n        .filter(s => s.length > 0);\n    };\n  }\n\n  constructor(tokenizer) {\n    this.data = new Map();\n    this.opts = {\n      tokenizer: tokenizer || IndexSegment.stringTokenizer\n    };\n  }\n\n  get length() {\n    return this.data.size;\n  }\n\n  tokenize(data) {\n    return unique(this.opts.tokenizer(data));\n  }\n\n  setForToken(token) {\n    if (!this.data.has(token)) {\n      this.data.set(token, new Set());\n    }\n    return this.data.get(token);\n  }\n\n  putTokens(tokens, id) {\n    tokens.forEach(token => {\n      this.setForToken(token).add(id);\n    });\n    return this.length;\n  }\n\n  put(data, id) {\n    return this.putTokens(this.tokenize(data), id);\n  }\n\n  search(data) {\n    return setValues(this.tokenize(data)\n      .map(token => this.setForToken(token))\n      .reduce(setIntersection, null));\n  }\n\n};\n\nexport { IndexSegment, Set, Map };\n"],"sourceRoot":"/Users/srozenraukh/dev/IndexSegment.js/es6"}