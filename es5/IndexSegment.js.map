{"version":3,"sources":["IndexSegment.js"],"names":[],"mappings":";;;;;;;;;;;;;;sBAAgB,SAAS;;;;sBACT,SAAS;;;;AAEzB,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE;AAC7B,SAAO,CAAC,GAAG,wBAAQ,6BAAI,CAAC,GAAE,MAAM,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;GAAA,CAAC,CAAC,GAAG,CAAC,CAAC;CACvD;;AAED,SAAS,SAAS,CAAC,CAAC,EAAE;AACpB,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,GAAC,CAAC,OAAO,CAAC,UAAA,CAAC;WAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GAAA,CAAC,CAAC;AAC7B,SAAO,IAAI,CAAC;CACb;;AAED,SAAS,MAAM,CAAC,GAAG,EAAE;AACnB,SAAO,SAAS,CAAC,wBAAQ,GAAG,CAAC,CAAC,CAAC;CAChC,CAAC;;IAEI,YAAY;eAAZ,YAAY;;WAMgB,mCAAC,OAAO,EAAE;AACxC,aAAO,UAAC,MAAM,EAAK;AACjB,eAAO,MAAM,CACV,WAAW,EAAE,CACb,KAAK,CAAC,OAAO,CAAC,CACd,GAAG,CAAC,UAAA,CAAC;iBAAI,CAAC,CAAC,IAAI,EAAE;SAAA,CAAC,CAClB,MAAM,CAAC,UAAA,CAAC;iBAAI,CAAC,CAAC,MAAM,GAAG,CAAC;SAAA,CAAC,CAAC;OAC9B,CAAC;KACH;;;SAZyB,eAAG;AAC3B,aAAO,YAAY,CAAC,yBAAyB,CAAC,cAAc,CAAC,CAAC;KAC/D;;;AAYU,WAhBP,YAAY,CAgBJ,SAAS,EAAE;0BAhBnB,YAAY;;AAiBd,QAAI,CAAC,IAAI,GAAG,yBAAS,CAAC;AACtB,QAAI,CAAC,IAAI,GAAG;AACV,eAAS,EAAE,SAAS,IAAI,YAAY,CAAC,eAAe;KACrD,CAAC;GACH;;eArBG,YAAY;;WA2BR,kBAAC,IAAI,EAAE;AACb,aAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;KAC1C;;;WAEU,qBAAC,KAAK,EAAE;AACjB,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACzB,YAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,yBAAS,CAAC,CAAC;OACjC;AACD,aAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC7B;;;WAEQ,mBAAC,MAAM,EAAE,EAAE,EAAE;;;AACpB,YAAM,CAAC,OAAO,CAAC,UAAA,KAAK,EAAI;AACtB,cAAK,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;OACjC,CAAC,CAAC;AACH,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;WAEE,aAAC,IAAI,EAAE,EAAE,EAAE;AACZ,aAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;KAChD;;;WAEK,gBAAC,IAAI,EAAE;;;AACX,aAAO,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CACjC,GAAG,CAAC,UAAA,KAAK;eAAI,OAAK,WAAW,CAAC,KAAK,CAAC;OAAA,CAAC,CACrC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC;KACnC;;;SA9BS,eAAG;AACX,aAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;KACvB;;;SAzBG,YAAY;;;AAuDjB,CAAC;;QAEO,YAAY,GAAZ,YAAY;QAAE,GAAG;QAAE,GAAG","file":"IndexSegment.js","sourcesContent":["import Set from 'es6-set';\nimport Map from 'es6-map';\n\nfunction setIntersection(a, b) {\n  return a ? new Set([...a].filter(x => !b.has(x))) : b;\n}\n\nfunction setValues(s) {\n  var vals = [];\n  s.forEach(a => vals.push(a));\n  return vals;\n}\n\nfunction unique(els) {\n  return setValues(new Set(els));\n};\n\nclass IndexSegment {\n\n  static get stringTokenizer() {\n    return IndexSegment.stringTokenizerForPattern(/[^a-zA-Z0-9]/);\n  }\n\n  static stringTokenizerForPattern(pattern) {\n    return (string) => {\n      return string\n        .toLowerCase()\n        .split(pattern)\n        .map(s => s.trim())\n        .filter(s => s.length > 0);\n    };\n  }\n\n  constructor(tokenizer) {\n    this.data = new Map();\n    this.opts = {\n      tokenizer: tokenizer || IndexSegment.stringTokenizer\n    };\n  }\n\n  get length() {\n    return this.data.size;\n  }\n\n  tokenize(data) {\n    return unique(this.opts.tokenizer(data));\n  }\n\n  setForToken(token) {\n    if (!this.data.has(token)) {\n      this.data.set(token, new Set());\n    }\n    return this.data.get(token);\n  }\n\n  putTokens(tokens, id) {\n    tokens.forEach(token => {\n      this.setForToken(token).add(id);\n    });\n    return this.length;\n  }\n\n  put(data, id) {\n    return this.putTokens(this.tokenize(data), id);\n  }\n\n  search(data) {\n    return setValues(this.tokenize(data)\n      .map(token => this.setForToken(token))\n      .reduce(setIntersection, null));\n  }\n\n};\n\nexport { IndexSegment, Set, Map };\n"],"sourceRoot":"/Users/stanistan/dev/mini-search-index.js/es6"}